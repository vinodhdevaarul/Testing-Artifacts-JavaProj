name: Build and Mirror Dependencies

on:
  push:

jobs:
  build-and-publish:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      MAVEN_REPO_URL: https://maven.pkg.github.com/${{ github.repository }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Configure settings.xml for GitHub Packages
        run: |
          mkdir -p ~/.m2
          cat > ~/.m2/settings.xml <<EOF
          <settings>
            <servers>
              <server>
                <id>github</id>
                <username>${{ github.actor }}</username>
                <password>${{ secrets.GITHUB_TOKEN }}</password>
              </server>
            </servers>
            <profiles>
              <profile>
                <id>github</id>
                <repositories>
                  <repository>
                    <id>central</id>
                    <url>https://repo.maven.apache.org/maven2</url>
                  </repository>
                  <repository>
                    <id>github</id>
                    <url>${{ env.MAVEN_REPO_URL }}</url>
                  </repository>
                </repositories>
              </profile>
            </profiles>
            <activeProfiles>
              <activeProfile>github</activeProfile>
            </activeProfiles>
          </settings>
          EOF

      - name: Resolve all dependencies (and copy them)
        run: |
          mkdir -p mirrored-deps
          mvn dependency:copy-dependencies -DoutputDirectory=mirrored-deps

      - name: Deploy dependencies to GitHub Packages
        run: |
          for jar in mirrored-deps/*.jar; do
            filename=$(basename "$jar")
            name="${filename%%-*}"
            version="${filename##*-}"
            version="${version%.jar}"

            # Skip your own artifact if it's in the list
            if [[ "$name" == "my-app" ]]; then
              continue
            fi

            # Reconstruct the POM and deploy
            mvn deploy:deploy-file \
              -Dfile="$jar" \
              -DgroupId="third.party" \
              -DartifactId="$name" \
              -Dversion="$version" \
              -Dpackaging=jar \
              -DrepositoryId=github \
              -Durl=${{ env.MAVEN_REPO_URL }} \
              -DgeneratePom=true
          done

      - name: Build project
        run: mvn clean install

      - name: Deploy your own artifact
        run: |
          mvn deploy -DrepositoryId=github -Durl=${{ env.MAVEN_REPO_URL }}
